definitions:
  CreatePlainAwsSessionRequest:
    properties:
      accountNumber:
        description: the account number of the aws account related to the role
        type: string
        x-go-name: AccountNumber
      awsAccessKeyId:
        type: string
        x-go-name: AwsAccessKeyId
      awsSecretAccessKey:
        type: string
        x-go-name: AwsSecretAccessKey
      mfaDevice:
        type: string
        x-go-name: MfaDevice
      name:
        description: the name which will be displayed
        type: string
        x-go-name: Name
      profileName:
        type: string
        x-go-name: ProfileName
      region:
        description: the region on which the session will be initialized
        type: string
        x-go-name: Region
      user:
        type: string
        x-go-name: User
    required:
    - name
    - accountNumber
    - region
    type: object
    x-go-package: leapp_daemon/interface/http/controller/dto/request_dto/plain_aws_session_dto
  CreateTrustedAwsSessionRequestDto:
    properties:
      accountName:
        description: the name which will be displayed
        type: string
        x-go-name: AccountName
      accountNumber:
        description: the account number of the aws account related to the role
        type: string
        x-go-name: AccountNumber
      parentId:
        description: |-
          the parent session id, can be an aws plain or federated session
          it's generated with an uuid v4
        type: string
        x-go-name: ParentId
      region:
        description: the region on which the session will be initialized
        type: string
        x-go-name: Region
      roleName:
        description: the role name
        type: string
        x-go-name: RoleName
    required:
    - parentId
    - accountName
    - accountNumber
    - roleName
    type: object
    x-go-package: leapp_daemon/interface/http/controller/dto/request_dto/trusted_aws_session_dto
  EditTrustedAwsSessionRequestDto:
    properties:
      accountName:
        description: the name which will be displayed
        type: string
        x-go-name: AccountName
      accountNumber:
        description: the account number of the aws account related to the role
        type: string
        x-go-name: AccountNumber
      parentId:
        description: |-
          the parent session id, can be an aws plain or federated session
          it's generated with an uuid v4
        type: string
        x-go-name: ParentId
      region:
        description: the region on which the session will be initialized
        type: string
        x-go-name: Region
      roleName:
        description: the role name
        type: string
        x-go-name: RoleName
    type: object
    x-go-package: leapp_daemon/interface/http/controller/dto/request_dto/trusted_aws_session_dto
  GetPlainAwsSessionResponse:
    properties:
      Data:
        $ref: '#/definitions/PlainAwsSession'
      Message:
        type: string
    type: object
    x-go-package: leapp_daemon/interface/http/controller/dto/response_dto/plain_aws_session_dto
  MessageResponse:
    properties:
      Message:
        type: string
    type: object
    x-go-package: leapp_daemon/interface/http/controller/dto/response_dto
  PlainAwsAccount:
    properties:
      MfaDevice:
        type: string
      NamedProfileId:
        type: string
      Region:
        type: string
      SessionTokenExpiration:
        type: string
    type: object
    x-go-package: leapp_daemon/domain/session
  PlainAwsSession:
    properties:
      Account:
        $ref: '#/definitions/PlainAwsAccount'
      Alias:
        type: string
      Id:
        type: string
      LastStopTime:
        type: string
      StartTime:
        type: string
      Status:
        $ref: '#/definitions/Status'
    type: object
    x-go-package: leapp_daemon/domain/session
  Status:
    format: int64
    type: integer
    x-go-package: leapp_daemon/domain/session
  TrustedAwsAccount:
    properties:
      AccountNumber:
        type: string
      Name:
        type: string
      Region:
        type: string
      Role:
        $ref: '#/definitions/TrustedAwsRole'
    type: object
    x-go-package: leapp_daemon/domain/session
  TrustedAwsRole:
    properties:
      Arn:
        type: string
      Name:
        type: string
    type: object
    x-go-package: leapp_daemon/domain/session
  TrustedAwsSession:
    properties:
      Account:
        $ref: '#/definitions/TrustedAwsAccount'
      Id:
        type: string
      ParentId:
        type: string
      StartTime:
        type: string
      Status:
        $ref: '#/definitions/Status'
    type: object
    x-go-package: leapp_daemon/domain/session
  UpdatePlainAwsSessionRequest:
    properties:
      accountNumber:
        type: string
        x-go-name: AccountNumber
      awsAccessKeyId:
        type: string
        x-go-name: AwsAccessKeyId
      awsSecretAccessKey:
        type: string
        x-go-name: AwsSecretAccessKey
      mfaDevice:
        type: string
        x-go-name: MfaDevice
      name:
        type: string
        x-go-name: Name
      profileName:
        type: string
        x-go-name: ProfileName
      region:
        type: string
        x-go-name: Region
      user:
        type: string
        x-go-name: User
    type: object
    x-go-package: leapp_daemon/interface/http/controller/dto/request_dto/plain_aws_session_dto
  UpdatePlainAwsSessionUriRequest:
    properties:
      Id:
        type: string
    type: object
    x-go-package: leapp_daemon/interface/http/controller/dto/request_dto/plain_aws_session_dto
  getTrustedAwsSessionResponse:
    properties:
      Data:
        $ref: '#/definitions/TrustedAwsSession'
      Message:
        type: string
    type: object
    x-go-package: leapp_daemon/interface/http/controller
paths:
  /session/plain:
    post:
      description: Create a new Plain AWS Session
      operationId: createPlainAwsSession
      parameters:
      - description: plain aws session create body
        in: body
        name: Body
        schema:
          $ref: '#/definitions/CreatePlainAwsSessionRequest'
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - plainAwsSession
  /session/plain/{id}:
    delete:
      description: Delete a Plain AWS Session
      operationId: deletePlainAwsSession
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - plainAwsSession
    get:
      description: Get a Plain AWS Session
      operationId: getPlainAwsSession
      responses:
        "200":
          description: GetPlainAwsSessionResponse
          schema:
            $ref: '#/definitions/GetPlainAwsSessionResponse'
      tags:
      - plainAwsSession
    put:
      description: Edit a Plain AWS Session
      operationId: updatePlainAwsSession
      parameters:
      - description: plain aws session update uri body
        in: body
        name: Body
        schema:
          $ref: '#/definitions/UpdatePlainAwsSessionRequest'
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - plainAwsSession
  /session/plain/{id}/start:
    post:
      description: Start a Plain AWS Session
      operationId: startPlainAwsSession
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - plainAwsSession
  /session/trusted:
    post:
      description: Create a new trusted aws session
      operationId: createTrustedAwsSession
      parameters:
      - description: This text will appear as description of your request body.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/CreateTrustedAwsSessionRequestDto'
      responses:
        "200":
          $ref: '#/responses/messageResponse'
      tags:
      - session-trusted-aws
  /session/trusted/{id}:
    delete:
      description: Delete a Trusted AWS Session
      operationId: deleteTrustedAwsSession
      parameters:
      - description: the id of the trusted aws session
        in: path
        name: Id
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/messageResponse'
      tags:
      - session-trusted-aws
    get:
      description: Get a Trusted AWS Session
      operationId: getTrustedAwsSession
      parameters:
      - description: the id of the trusted aws session
        in: path
        name: Id
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/getTrustedAwsSessionResponse'
      tags:
      - session-trusted-aws
    put:
      description: Edit a Trusted AWS Session
      operationId: editTrustedAwsSession
      parameters:
      - description: This text will appear as description of your request body.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/EditTrustedAwsSessionRequestDto'
      - description: the id of the trusted aws session
        in: path
        name: Id
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/messageResponse'
      tags:
      - session-trusted-aws
responses:
  getPlainAwsSessionResponse:
    description: ""
    schema:
      $ref: '#/definitions/GetPlainAwsSessionResponse'
  getTrustedAwsSessionResponse:
    description: ""
    schema:
      $ref: '#/definitions/getTrustedAwsSessionResponse'
  messageResponse:
    description: ""
    schema:
      $ref: '#/definitions/MessageResponse'
swagger: "2.0"
