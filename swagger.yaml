basePath: /api/v1
consumes:
- application/json
definitions:
  AwsCreateIamRoleChainedSessionRequestDto:
    properties:
      accountName:
        description: the name which will be displayed
        type: string
        x-go-name: AccountName
      accountNumber:
        description: the account number of the aws account related to the role
        type: string
        x-go-name: AccountNumber
      parentId:
        description: |-
          the parent session id, can be an aws plain or federated session
          it's generated with an uuid v4
        type: string
        x-go-name: ParentId
      region:
        description: the region on which the session will be initialized
        type: string
        x-go-name: Region
      roleName:
        description: the role name
        type: string
        x-go-name: RoleName
    required:
    - parentId
    - accountName
    - accountNumber
    - roleName
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/request_dto/aws_iam_role_chained_session_request_dto
  AwsCreateIamUserSessionRequest:
    properties:
      accountNumber:
        description: the account number of the aws account related to the role
        type: string
        x-go-name: AccountNumber
      awsAccessKeyId:
        type: string
        x-go-name: AwsAccessKeyId
      awsSecretKey:
        type: string
        x-go-name: AwsSecretKey
      mfaDevice:
        type: string
        x-go-name: MfaDevice
      profileName:
        type: string
        x-go-name: ProfileName
      region:
        description: the region on which the session will be initialized
        type: string
        x-go-name: Region
      sessionName:
        description: the name which will be displayed
        type: string
        x-go-name: SessionName
      userName:
        type: string
        x-go-name: UserName
    required:
    - sessionName
    - accountNumber
    - region
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/request_dto/aws_iam_user_session_request_dto
  AwsEditIamRoleChainedSessionRequestDto:
    properties:
      accountName:
        description: the name which will be displayed
        type: string
        x-go-name: AccountName
      accountNumber:
        description: the account number of the aws account related to the role
        type: string
        x-go-name: AccountNumber
      parentId:
        description: |-
          the parent session id, can be an aws plain or federated session
          it's generated with an uuid v4
        type: string
        x-go-name: ParentId
      region:
        description: the region on which the session will be initialized
        type: string
        x-go-name: Region
      roleName:
        description: the role name
        type: string
        x-go-name: RoleName
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/request_dto/aws_iam_role_chained_session_request_dto
  AwsEditIamUserSessionRequest:
    properties:
      accountNumber:
        type: string
        x-go-name: AccountNumber
      awsAccessKeyId:
        type: string
        x-go-name: AwsAccessKeyId
      awsSecretAccessKey:
        type: string
        x-go-name: AwsSecretAccessKey
      mfaDevice:
        type: string
        x-go-name: MfaDevice
      name:
        type: string
        x-go-name: Name
      profileName:
        type: string
        x-go-name: ProfileName
      region:
        type: string
        x-go-name: Region
      user:
        type: string
        x-go-name: User
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/request_dto/aws_iam_user_session_request_dto
  AwsGetIamUserSessionResponse:
    properties:
      Data:
        $ref: '#/definitions/AwsIamUserSession'
      Message:
        type: string
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/response_dto/aws_iam_user_session_response_dto
  AwsIamUserSession:
    properties:
      AccessKeyIdLabel:
        type: string
      AccountNumber:
        type: string
      Id:
        type: string
      LastStopTime:
        type: string
      MfaDevice:
        type: string
      Name:
        type: string
      NamedProfileId:
        type: string
      Region:
        type: string
      SecretKeyLabel:
        type: string
      SessionTokenExpiration:
        type: string
      SessionTokenLabel:
        type: string
      StartTime:
        type: string
      Status:
        $ref: '#/definitions/AwsSessionStatus'
      UserName:
        type: string
    type: object
    x-go-package: leapp_daemon/domain/domain_aws/aws_iam_user
  AwsSessionStatus:
    format: int64
    type: integer
    x-go-package: leapp_daemon/domain/domain_aws
  GcpCreateIamUserAccountOauthSessionRequest:
    properties:
      accountId:
        description: the account identifier of the gcp account
        type: string
        x-go-name: AccountId
      name:
        description: the name which will be displayed
        type: string
        x-go-name: Name
      oauthCode:
        description: the OAuth code to obtain credentials
        type: string
        x-go-name: OauthCode
      projectName:
        description: the name of the gcp project
        type: string
        x-go-name: ProjectName
    required:
    - name
    - accountId
    - projectName
    - oauthCode
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/request_dto/gcp_iam_user_account_oauth_session_request_dto
  GcpEditIamUserAccountOauthSessionRequest:
    properties:
      name:
        description: the name which will be displayed
        type: string
        x-go-name: Name
      projectName:
        description: the name of the gcp project
        type: string
        x-go-name: ProjectName
    required:
    - name
    - projectName
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/request_dto/gcp_iam_user_account_oauth_session_request_dto
  GcpEditIamUserAccountOauthSessionUriRequest:
    properties:
      id:
        description: 'in: path'
        type: string
        x-go-name: Id
    required:
    - id
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/request_dto/gcp_iam_user_account_oauth_session_request_dto
  GcpGetIamUserAccountOauthSessionResponse:
    properties:
      Data:
        $ref: '#/definitions/GcpIamUserAccountOauthSession'
      Message:
        type: string
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/response_dto/gcp_iam_user_account_oauth_session_response_dto
  GcpIamUserAccountOauthSession:
    properties:
      AccountId:
        type: string
      CredentialsLabel:
        type: string
      Id:
        type: string
      LastStopTime:
        type: string
      Name:
        type: string
      ProjectName:
        type: string
      StartTime:
        type: string
      Status:
        $ref: '#/definitions/GcpSessionStatus'
    type: object
    x-go-package: leapp_daemon/domain/domain_gcp/gcp_iam_user_account_oauth
  GcpOauthUrlResponse:
    properties:
      Data:
        type: string
      Message:
        type: string
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/response_dto/gcp_iam_user_account_oauth_session_response_dto
  GcpSessionStatus:
    format: int64
    type: integer
    x-go-package: leapp_daemon/domain/domain_gcp
  MessageResponse:
    properties:
      Message:
        type: string
    type: object
    x-go-package: leapp_daemon/adapter/http/dto/response_dto
host: localhost
info:
  contact:
    email: john.doe@example.com
    name: John Doe
    url: https://john.doe.com
  description: |-
    the purpose of this application is to provide an application
    that is using plain go code to define an API

    This should demonstrate all the possible comment annotations
    that are available to turn go code into a fully compliant swagger 2.0 spec
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  title: Leapp API
  version: 0.0.1
paths:
  /aws/iam-user-sessions:
    post:
      description: Create a new AWS IAM UserName Session
      operationId: createAwsIamUserSession
      parameters:
      - description: AWS Iam UserName Session create body
        in: body
        name: Body
        schema:
          $ref: '#/definitions/AwsCreateIamUserSessionRequest'
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - awsIamUserSession
  /aws/iam-user-sessions/{id}:
    delete:
      description: Delete an AWS IAM UserName Session
      operationId: deleteAwsIamUserSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - awsIamUserSession
    get:
      description: Get a AWS IAM UserName Session
      operationId: getAwsIamUserSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: AwsGetIamUserSessionResponse
          schema:
            $ref: '#/definitions/AwsGetIamUserSessionResponse'
      tags:
      - awsIamUserSession
    put:
      description: Edit a AWS IAM UserName Session
      operationId: editAwsIamUserSession
      parameters:
      - description: AWS Iam UserName Session update uri body
        in: body
        name: Body
        schema:
          $ref: '#/definitions/AwsEditIamUserSessionRequest'
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - awsIamUserSession
  /aws/iam-user-sessions/{id}/start:
    post:
      description: Start an AWS IAM UserName Session
      operationId: startAwsIamUserSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - awsIamUserSession
  /aws/iam-user-sessions/{id}/stop:
    post:
      description: Stop an AWS IAM UserName Session
      operationId: stopAwsIamUserSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - awsIamUserSession
  /gcp/iam-user-account-oauth-sessions:
    post:
      description: Create a new GCP Iam UserAccount Oauth Session
      operationId: createGcpIamUserAccountOauthSession
      parameters:
      - description: gcp iam user account oauth session create body
        in: body
        name: Body
        schema:
          $ref: '#/definitions/GcpCreateIamUserAccountOauthSessionRequest'
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - gcpIamUserAccountOauthSession
  /gcp/iam-user-account-oauth-sessions/{id}:
    delete:
      description: Delete a GCP Iam UserAccount Oauth Session
      operationId: deleteGcpIamUserAccountOauthSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - gcpIamUserAccountOauthSession
    get:
      description: Get a GCP Iam UserAccount Oauth Session
      operationId: getGcpIamUserAccountOauthSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: GcpGetIamUserAccountOauthSessionResponse
          schema:
            $ref: '#/definitions/GcpGetIamUserAccountOauthSessionResponse'
      tags:
      - gcpIamUserAccountOauthSession
    put:
      description: Edit a GCP Iam UserAccount Oauth Session
      operationId: editGcpIamUserAccountOauthSession
      parameters:
      - description: gcp gcp-iam-user-account-oauth-session session edit body
        in: body
        name: Body
        schema:
          $ref: '#/definitions/GcpEditIamUserAccountOauthSessionRequest'
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - gcpIamUserAccountOauthSession
  /gcp/iam-user-account-oauth-sessions/{id}/start:
    get:
      description: Start a GCP Iam UserAccount Oauth Session
      operationId: startGcpIamUserAccountOauthSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - gcpIamUserAccountOauthSession
  /gcp/iam-user-account-oauth-sessions/{id}/stop:
    get:
      description: Stop a GCP Iam UserAccount Oauth Session
      operationId: stopGcpIamUserAccountOauthSession
      parameters:
      - in: path
        name: id
        required: true
        type: string
        x-go-name: Id
      responses:
        "200":
          description: MessageResponse
          schema:
            $ref: '#/definitions/MessageResponse'
      tags:
      - gcpIamUserAccountOauthSession
  /gcp/iam-user-account-oauth-url:
    get:
      description: Get the GCP OAuth url
      operationId: getGcpOauthUrl
      responses:
        "200":
          description: GcpOauthUrlResponse
          schema:
            $ref: '#/definitions/GcpOauthUrlResponse'
      tags:
      - gcpIamUserAccountOauthSession
produces:
- application/json
responses:
  gcpGetIamUserAccountOauthSessionResponse:
    description: ""
    schema:
      $ref: '#/definitions/GcpGetIamUserAccountOauthSessionResponse'
  gcpOauthUrlResponse:
    description: ""
    schema:
      $ref: '#/definitions/GcpOauthUrlResponse'
  getAwsIamUserSessionResponse:
    description: ""
    schema:
      $ref: '#/definitions/AwsGetIamUserSessionResponse'
  messageResponse:
    description: ""
    schema:
      $ref: '#/definitions/MessageResponse'
schemes:
- http
- https
security:
- api_key: []
swagger: "2.0"
