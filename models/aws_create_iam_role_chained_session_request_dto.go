// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AwsCreateIamRoleChainedSessionRequestDto AwsCreateIamRoleChainedSessionRequestDto AwsCreateIamRoleChainedSessionRequestDto aws create iam role chained session request dto
//
// swagger:model AwsCreateIamRoleChainedSessionRequestDto
type AwsCreateIamRoleChainedSessionRequestDto struct {

	// the name which will be displayed
	// Required: true
	AccountName *string `json:"accountName"`

	// the account number of the aws account related to the role
	// Required: true
	AccountNumber *string `json:"accountNumber"`

	// the parent session id, can be an aws plain or federated session
	// it's generated with an uuid v4
	// Required: true
	ParentID *string `json:"parentId"`

	// the region on which the session will be initialized
	Region string `json:"region,omitempty"`

	// the role name
	// Required: true
	RoleName *string `json:"roleName"`
}

// Validate validates this aws create iam role chained session request dto
func (m *AwsCreateIamRoleChainedSessionRequestDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAccountNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParentID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AwsCreateIamRoleChainedSessionRequestDto) validateAccountName(formats strfmt.Registry) error {

	if err := validate.Required("accountName", "body", m.AccountName); err != nil {
		return err
	}

	return nil
}

func (m *AwsCreateIamRoleChainedSessionRequestDto) validateAccountNumber(formats strfmt.Registry) error {

	if err := validate.Required("accountNumber", "body", m.AccountNumber); err != nil {
		return err
	}

	return nil
}

func (m *AwsCreateIamRoleChainedSessionRequestDto) validateParentID(formats strfmt.Registry) error {

	if err := validate.Required("parentId", "body", m.ParentID); err != nil {
		return err
	}

	return nil
}

func (m *AwsCreateIamRoleChainedSessionRequestDto) validateRoleName(formats strfmt.Registry) error {

	if err := validate.Required("roleName", "body", m.RoleName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this aws create iam role chained session request dto based on context it is used
func (m *AwsCreateIamRoleChainedSessionRequestDto) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AwsCreateIamRoleChainedSessionRequestDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AwsCreateIamRoleChainedSessionRequestDto) UnmarshalBinary(b []byte) error {
	var res AwsCreateIamRoleChainedSessionRequestDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
